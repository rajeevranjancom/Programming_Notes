C Programming Language Tutorial:-
>C language Tutorial with programming approach for beginners and professionals, helps you to understand the C language tutorial easily. Our C tutorial explains each topic with programs.
>The C Language is developed for creating system applications that direct interacts to the hardware devices such as drivers, kernals etc.
>C programming is considered as the base for other programming languages, that is why it is known as mother language.

It can be defined by following ways:-

>Mother language
>System programming language
>Procedure-oriented programming language
>Structured programming language
>Mid level programming language

 
1) C as a mother language:-
>C language is considered as the mother language of all the modern languages because most of the compilers, JVMs, Kernals etc. are written in C language and most of languages follows c syntax e.g. C++, Java etc.
>It provides the core concepts like array, functions, file handling etc. that is being used in many languages like C++, java, C# etc.

2) C as a system programming language:-
>A system programming language is used to create system softwares. C language is a system programming language because it can be used to do low level programming (e.g. driver and kernel). It is generally used to create hardware devices, OS, drivers, kernels etc. For example, linux kernel is written in C.

It cannot be used in internet programming like java, .net, php etc.

3) C as a procedural language
>A procedure is known as function, method, routine, subroutine etc. A procedural language specifies a series of steps or procedures for the program to solve the problem.
>A procedural language breaks the program into functions, data structures etc.

C is a procedural language. In C, variables and function prototypes must be declared before being used.

4) C as a structured programming language
>A structured programming language is a subset of procedural language. Structure means to break a program into parts or blocks so that it may be easy to understand.
>In C language, we break the program into parts using functions. It makes the program easier to understand and modify.

5) C as a mid-level programming language
>C is considered as a middle level language because it supports the feature of both low-level and high level language. C language program is converted into assembly code, supports pointer arithmetic (low level), but it is machine independent (feature of high level).
>Low level language is specific to one machine i.e. machine dependent. It is machine dependent, fast to run. But it is not easy to understand.
>High Level language is not specific to one machine i.e. machine independent. It is easy to understand.

History of C Language:-

>Dennis Ritchie - founder of C language
>History of C language is interesting to know. Here we are going to discuss brief history of c language.
>C programming language was developed in 1972 by Dennis Ritchie at bell laboratories of AT&T (American Telephone & Telegraph), located in U.S.A.
>Dennis Ritchie is known as the founder of c language.
>It was developed to overcome the problems of previous languages such as B, BCPL etc.
>Initially, C language was developed to be used in UNIX operating system. It inherits many features of previous languages such as B and BCPL.

>>>>>>>Let's see the programming languages that were developed before C language.

Language	Year	Developed By
Algol		1960	International Group
BCPL		1967	Martin Richard
B		1970	Ken Thompson
Traditional C	1972	Dennis Ritchie
K & R C		1978	Kernighan & Dennis Ritchie
ANSI C		1989	ANSI Committee
ANSI/ISO C	1990	ISO Committee
C99		1999	Standardization Committee

Features of C Language:-

C features:-
>C is the widely used language. It provides a lot of features that are given below.

>Simple
>Machine Independent or Portable
>Mid-level programming language
>structured programming language
>Rich Library
>Memory Management
>Fast Speed
>Pointers
>Recursion
>Extensible

 
1) Simple:-
>C is a simple language in the sense that it provides structured approach (to break the problem into parts), rich set of library functions, data types etc.

2) Machine Independent or Portable:-
>Unlike assembly language, c programs can be executed in many machines with little bit or no change. But it is not platform-independent.

3) Mid-level prorgramming language:-
>C is also used to do low level programming. It is used to develop system applications such as kernel, driver etc. It also supports the feature of high level language. That is why it is known as mid-level language.

4) Structured prorgramming language:-
>C is a structured programming language in the sense that we can break the program into parts using functions. So, it is easy to understand and modify.

5) Rich Library:-
>C provides a lot of inbuilt functions that makes the development fast.

6) Memory Management:-
>It supports the feature of dynamic memory allocation. In C language, we can free the allocated memory at any time by calling the free() function.

7) Speed:-
>The compilation and execution time of C language is fast.

8) Pointer:-
>C provides the feature of pointers. We can directly interact with the memory by using the pointers. We can use pointers for memory, structures, functions, array etc.

9) Recursion:-
>In c, we can call the function within the function. It provides code reusability for every function.

10) Extensible:-
>C language is extensible because it can easily adopt new features

First C Program:-
>Before starting the abcd of C language, you need to learn how to write, compile and run the first c program.

To write the first c program, open the C console and write the following code:

#include <stdio.h>  
#include <conio.h>  
void main(){  
printf("Hello C Language");  
  
getch();  
}  

imp:-
>>#include <stdio.h> includes the standard input output library functions. The printf() function is defined in stdio.h .
>>#include <conio.h> includes the console input output library functions. The getch() function is defined in conio.h file.
>>void main() The main() function is the entry point of every program in c language. The void keyword specifies that it returns no value.
>>printf() The printf() function is used to print data on the console.
>>getch() The getch() function asks for a single character. Until you press any key, it blocks the screen.

c program:-
>clear screen by clrscr() function
>If you run the c program many times, it will append the output in previous output. But, you can call clrscr() function to clear the screen. So it will be better for you to call clrscr() function after the main method as given below:

#include <stdio.h>  
#include <conio.h>  
void main(){  
clrscr();  
printf("Hello C Language");  
  
getch();  
}  

Flow of C Program:-
>The C program follows many steps in execution. To understand the flow of C program well, let us see a simple program first.

File: simple.c

#include <stdio.h>  
void main(){  
printf("Hello C Language");  
}  
Let's try to understand the flow of above program by the figure given below.

C program flow:-

1) C program (source code) is sent to preprocessor first. The preprocessor is responsible to convert preprocessor directives into their respective values. The preprocessor generates an expanded source code.

2) Expanded source code is sent to compiler which compiles the code and converts it into assembly code.

3) The assembly code is sent to assembler which assembles the code and converts it into object code. Now a simple.obj file is generated.

4) The object code is sent to linker which links it to the library such as header files. Then it is converted into executable code. A simple.exe file is generated.

5) The executable code is sent to loader which loads it into memory and then it is executed. After execution, output is sent to console.

printf scanf in C:-
>The printf() and scanf() functions are used for input and output in C language. Both functions are inbuilt library functions, defined in stdio.h (header file).

printf() function:-
>The printf() function is used for output. It prints the given statement to the console.

The syntax of printf() function is given below:-
>printf("format string",argument_list);  
>The format string can be %d (integer), %c (character), %s (string), %f (float) etc.

scanf() function:-
>The scanf() function is used for input. It reads the input data from the console.
>scanf("format string",argument_list);  

 
Program to print cube of given number:-
>Let's see a simple example of c language that gets input from the user and prints the cube of the given number.

#include<stdio.h>  
#include<conio.h>  
void main(){  
int number;  
clrscr();  
  
printf("enter a number:");  
scanf("%d",&number);  
  
printf("cube of number is:%d ",number*number*number);  
  
getch();  
}  
Output

enter a number:5
cube of number is:125

>The scanf("%d",&number) statement reads integer number from the console and stores the given value in number variable.
>The printf("cube of number is:%d ",number*number*number) statement prints the cube of number on the console.

Program to print sum of 2 numbers:-
>Let's see a simple example of input and output in C language that prints addition of 2 numbers.

#include<stdio.h>  
#include<conio.h>  
void main(){  
int x=0,y=0,result=0;  
clrscr();  
  
printf("enter first number:");  
scanf("%d",&x);  
printf("enter second number:");  
scanf("%d",&y);  
  
result=x+y;  
printf("sum of 2 numbers:%d ",result);  
  
getch();  
}  
Output

enter first number:9
enter second number:9
sum of 2 numbers:18

